{
  "info": {
    "_postman_id": "aa9f2aac-1f7d-48b9-82b0-5bf678a94b7c",
    "name": "Github API",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "get users repository",
      "id": "b96656f8-29d9-44de-af33-722db1e8b075",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": {
            "token": "{{githubToken}}"
          }
        },
        "method": "GET",
        "header": [],
        "url": "{{adressUrl}}/user/repos"
      },
      "response": [
        {
          "id": "6c7d74ae-5705-44b9-86d0-832c4fd94283",
          "name": "get users repository",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": "{{adressUrl}}/user/repos"
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Server",
              "value": "GitHub.com"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Oct 2021 11:23:43 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Cache-Control",
              "value": "private, max-age=60, s-maxage=60"
            },
            {
              "key": "Vary",
              "value": "Accept, Authorization, Cookie, X-GitHub-OTP"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding, Accept, X-Requested-With"
            },
            {
              "key": "ETag",
              "value": "W/\"fedf787f0af670012cde8f8e70a419635656a86aeab87b7cfd10505acfd8472a\""
            },
            {
              "key": "X-OAuth-Scopes",
              "value": "delete_repo, repo"
            },
            {
              "key": "X-Accepted-OAuth-Scopes",
              "value": ""
            },
            {
              "key": "github-authentication-token-expiration",
              "value": "2021-11-22 12:06:44 UTC"
            },
            {
              "key": "X-GitHub-Media-Type",
              "value": "github.v3; format=json"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "5000"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "4986"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "1635250143"
            },
            {
              "key": "X-RateLimit-Used",
              "value": "14"
            },
            {
              "key": "X-RateLimit-Resource",
              "value": "core"
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubdomains; preload"
            },
            {
              "key": "X-Frame-Options",
              "value": "deny"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Referrer-Policy",
              "value": "origin-when-cross-origin, strict-origin-when-cross-origin"
            },
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'none'"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "X-GitHub-Request-Id",
              "value": "4B2A:13AFD:1A21886:1AA0A5C:6177E53F"
            }
          ],
          "cookie": [],
          "responseTime": null,
          "body": "[\n    {\n        \"id\": 401318244,\n        \"node_id\": \"MDEwOlJlcG9zaXRvcnk0MDEzMTgyNDQ=\",\n        \"name\": \"Portfolio\",\n        \"full_name\": \"Szczawik90/Portfolio\",\n        \"private\": false,\n        \"owner\": {\n            \"login\": \"Szczawik90\",\n            \"id\": 46355293,\n            \"node_id\": \"MDQ6VXNlcjQ2MzU1Mjkz\",\n            \"avatar_url\": \"https://avatars.githubusercontent.com/u/46355293?v=4\",\n            \"gravatar_id\": \"\",\n            \"url\": \"https://api.github.com/users/Szczawik90\",\n            \"html_url\": \"https://github.com/Szczawik90\",\n            \"followers_url\": \"https://api.github.com/users/Szczawik90/followers\",\n            \"following_url\": \"https://api.github.com/users/Szczawik90/following{/other_user}\",\n            \"gists_url\": \"https://api.github.com/users/Szczawik90/gists{/gist_id}\",\n            \"starred_url\": \"https://api.github.com/users/Szczawik90/starred{/owner}{/repo}\",\n            \"subscriptions_url\": \"https://api.github.com/users/Szczawik90/subscriptions\",\n            \"organizations_url\": \"https://api.github.com/users/Szczawik90/orgs\",\n            \"repos_url\": \"https://api.github.com/users/Szczawik90/repos\",\n            \"events_url\": \"https://api.github.com/users/Szczawik90/events{/privacy}\",\n            \"received_events_url\": \"https://api.github.com/users/Szczawik90/received_events\",\n            \"type\": \"User\",\n            \"site_admin\": false\n        },\n        \"html_url\": \"https://github.com/Szczawik90/Portfolio\",\n        \"description\": \"my Tester's portfolio\",\n        \"fork\": false,\n        \"url\": \"https://api.github.com/repos/Szczawik90/Portfolio\",\n        \"forks_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/forks\",\n        \"keys_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/keys{/key_id}\",\n        \"collaborators_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/collaborators{/collaborator}\",\n        \"teams_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/teams\",\n        \"hooks_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/hooks\",\n        \"issue_events_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/issues/events{/number}\",\n        \"events_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/events\",\n        \"assignees_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/assignees{/user}\",\n        \"branches_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/branches{/branch}\",\n        \"tags_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/tags\",\n        \"blobs_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/git/blobs{/sha}\",\n        \"git_tags_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/git/tags{/sha}\",\n        \"git_refs_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/git/refs{/sha}\",\n        \"trees_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/git/trees{/sha}\",\n        \"statuses_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/statuses/{sha}\",\n        \"languages_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/languages\",\n        \"stargazers_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/stargazers\",\n        \"contributors_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/contributors\",\n        \"subscribers_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/subscribers\",\n        \"subscription_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/subscription\",\n        \"commits_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/commits{/sha}\",\n        \"git_commits_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/git/commits{/sha}\",\n        \"comments_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/comments{/number}\",\n        \"issue_comment_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/issues/comments{/number}\",\n        \"contents_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/contents/{+path}\",\n        \"compare_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/compare/{base}...{head}\",\n        \"merges_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/merges\",\n        \"archive_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/{archive_format}{/ref}\",\n        \"downloads_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/downloads\",\n        \"issues_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/issues{/number}\",\n        \"pulls_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/pulls{/number}\",\n        \"milestones_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/milestones{/number}\",\n        \"notifications_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/notifications{?since,all,participating}\",\n        \"labels_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/labels{/name}\",\n        \"releases_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/releases{/id}\",\n        \"deployments_url\": \"https://api.github.com/repos/Szczawik90/Portfolio/deployments\",\n        \"created_at\": \"2021-08-30T11:26:22Z\",\n        \"updated_at\": \"2021-10-25T13:04:39Z\",\n        \"pushed_at\": \"2021-10-25T13:04:37Z\",\n        \"git_url\": \"git://github.com/Szczawik90/Portfolio.git\",\n        \"ssh_url\": \"git@github.com:Szczawik90/Portfolio.git\",\n        \"clone_url\": \"https://github.com/Szczawik90/Portfolio.git\",\n        \"svn_url\": \"https://github.com/Szczawik90/Portfolio\",\n        \"homepage\": null,\n        \"size\": 11,\n        \"stargazers_count\": 0,\n        \"watchers_count\": 0,\n        \"language\": null,\n        \"has_issues\": true,\n        \"has_projects\": true,\n        \"has_downloads\": true,\n        \"has_wiki\": true,\n        \"has_pages\": false,\n        \"forks_count\": 0,\n        \"mirror_url\": null,\n        \"archived\": false,\n        \"disabled\": false,\n        \"open_issues_count\": 0,\n        \"license\": null,\n        \"allow_forking\": true,\n        \"is_template\": false,\n        \"topics\": [],\n        \"visibility\": \"public\",\n        \"forks\": 0,\n        \"open_issues\": 0,\n        \"watchers\": 0,\n        \"default_branch\": \"main\",\n        \"permissions\": {\n            \"admin\": true,\n            \"maintain\": true,\n            \"push\": true,\n            \"triage\": true,\n            \"pull\": true\n        }\n    }\n]"
        }
      ]
    },
    {
      "name": "Create Repository",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "7866c527-90f5-40c8-a2c4-adbc4066604c",
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "const response = pm.response.json()",
              "",
              "pm.environment.set(\"repoName\", response.name);",
              "",
              "pm.environment.set(\"repoId\", response.owner.id);",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "id": "d7d81a99-82d1-47b3-97df-19079b8ab9d6",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": {
            "token": "{{githubToken}}"
          }
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"test {{$randomInt}}\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{adressUrl}}/user/repos",
          "host": [
            "{{adressUrl}}"
          ],
          "path": [
            "user",
            "repos"
          ],
          "query": [
            {
              "key": "name",
              "value": "",
              "type": "text",
              "disabled": true
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "get a single repo",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "99c200ee-c259-467a-9c4b-caff6a704df3",
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "const response = pm.response.json();",
              "",
              "",
              "pm.test(\"name is correct\", () => {",
              "    pm.expect(response.name).to.eql(pm.environment.get(\"repoName\"));",
              "});",
              "",
              "",
              "",
              "pm.test(\"Id is correct\", () => {",
              "    pm.expect(response.owner.id).to.eql(pm.environment.get(\"repoId\"));",
              "});",
              "",
              "console.log(response.owner.id)"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "id": "98a0aeb8-e1d2-4830-a145-157dfcc22dfd",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": {
            "token": "{{githubToken}}"
          }
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{adressUrl}}/repos/:owner/:repo",
          "host": [
            "{{adressUrl}}"
          ],
          "path": [
            "repos",
            ":owner",
            ":repo"
          ],
          "variable": [
            {
              "id": "0c315a7d-226e-40dc-8eb1-891715f3792a",
              "key": "owner",
              "value": "{{ownerName}}"
            },
            {
              "id": "43780ad4-14be-4cc6-9c3f-8cc9ea56e458",
              "key": "repo",
              "value": "{{repoName}}"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Create an Issue",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "ef049d53-e1a0-4706-ba3c-60466bdc0e51",
            "exec": [
              "pm.test(\"Status code is 201\", () => {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "const response = pm.response.json()",
              "",
              "pm.environment.set(\"issueNumber\", response.number);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "id": "6f9d9c14-e8d8-40a9-b89f-93d50383262c",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": {
            "token": "{{githubToken}}"
          }
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"This issue has been automatically created by Postman.\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{adressUrl}}/repos/:owner/:repo/issues",
          "host": [
            "{{adressUrl}}"
          ],
          "path": [
            "repos",
            ":owner",
            ":repo",
            "issues"
          ],
          "query": [
            {
              "key": "title",
              "value": "Found a bug",
              "disabled": true
            }
          ],
          "variable": [
            {
              "id": "c2a09785-b8e0-4b8b-95d1-2c7dc12008b6",
              "key": "owner",
              "value": "{{ownerName}}"
            },
            {
              "id": "f6497c8d-275b-4e4d-855d-71b92a14063b",
              "key": "repo",
              "value": "{{repoName}}"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get a single issue",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "70ededac-0362-427c-8411-14d81c86579c",
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "// Parsing Response body to JSON",
              "const response = pm.response.json()",
              "",
              "// Callback function checking respons body containing title with string \"Found a bug\"",
              "pm.test(\"title is correct\", () => {",
              "    pm.expect(response.title).to.eql(\"Found a bug\");",
              "});",
              "",
              "",
              "console.log(response.body);",
              "",
              "pm.test(\"body is created\", () => {",
              "    pm.expect(response.body).to.eql(\"This issue has been automatically created by Postman.\")",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "id": "717afc4b-16e2-43fe-b454-438fb68d07bd",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": {
            "token": "{{githubToken}}"
          }
        },
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"This issue has been automatically created by Postman.\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{adressUrl}}/repos/:owner/:repo/issues/:issue_number",
          "host": [
            "{{adressUrl}}"
          ],
          "path": [
            "repos",
            ":owner",
            ":repo",
            "issues",
            ":issue_number"
          ],
          "query": [
            {
              "key": "title",
              "value": "Found a bug",
              "disabled": true
            }
          ],
          "variable": [
            {
              "id": "9c763ac9-172c-4e86-827d-c85be78fa3ca",
              "key": "owner",
              "value": "{{ownerName}}"
            },
            {
              "id": "938a1fd6-8679-411f-b79f-22a44ff19478",
              "key": "repo",
              "value": "{{repoName}}"
            },
            {
              "id": "d7dd81e0-0c7f-4a84-a7dd-56028600ebd3",
              "key": "issue_number",
              "value": "{{issueNumber}}"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Delete Repository",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "1a4376d3-2dea-4b55-bed0-24f88ba0e62b",
            "exec": [
              "pm.test(\"Status code is 204\", () => {",
              "    pm.response.to.have.status(204);",
              "});",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "id": "0498e20e-d6bb-4c03-a0ed-343505ca3ca1",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": {
            "token": "{{githubToken}}"
          }
        },
        "method": "DELETE",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"test {{$randomInt}}\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{adressUrl}}/repos/:owner/:repo",
          "host": [
            "{{adressUrl}}"
          ],
          "path": [
            "repos",
            ":owner",
            ":repo"
          ],
          "query": [
            {
              "key": "name",
              "value": "",
              "type": "text",
              "disabled": true
            }
          ],
          "variable": [
            {
              "id": "44fff1f6-6d9c-4879-8e78-25867ff83abc",
              "key": "owner",
              "value": "{{ownerName}}"
            },
            {
              "id": "036c0bd4-3aa0-4367-a378-3453008550d0",
              "key": "repo",
              "value": "{{repoName}}"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get deleted repo",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "6d1e2967-9076-406a-980f-1d6d45058d2e",
            "exec": [
              "pm.test(\"Status code is 404\", () => {",
              "    pm.response.to.have.status(404);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "id": "cc19e6a0-41c2-4d85-bd0a-e73ea07e37c7",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": {
            "token": "{{githubToken}}"
          }
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{adressUrl}}/repos/:owner/:repo",
          "host": [
            "{{adressUrl}}"
          ],
          "path": [
            "repos",
            ":owner",
            ":repo"
          ],
          "variable": [
            {
              "id": "dcf45ec8-ac64-41d4-9518-6834f221f0d4",
              "key": "owner",
              "value": "{{ownerName}}"
            },
            {
              "id": "56fd35f6-6436-4338-acd6-3e881bf3e11d",
              "key": "repo",
              "value": "{{repoName}}"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "New Request",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "40f3d604-322e-4226-a52a-ff273be00c87",
            "exec": [
              "// Parsing Response body to JSON",
              "const response = pm.response.json()",
              "",
              "console.log(response[0].other['social-media'][1])",
              "",
              "",
              "",
              "let media = response[0].other['social-media'][1];",
              "pm.test(\"Instagam exist\", () => {",
              "    console.log(media)",
              "    pm.expect(media).to.include(\"Instagram\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "id": "935d9e72-c96f-4922-8bdd-8ef047055252",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "url": "https://run.mocky.io/v3/76d67ddb-23dc-4947-b29f-6dcb83aa6a43"
      },
      "response": []
    },
    {
      "name": "New Request Copy",
      "id": "d8a2f55e-dcb5-4dde-b309-a4f41e9e3d40",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "url": null
      },
      "response": []
    }
  ]
}